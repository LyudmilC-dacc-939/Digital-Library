plugins {
    id 'java'
    id 'application'
    id 'org.springframework.boot' version '3.3.2'
    id 'io.spring.dependency-management' version '1.1.3'
}

group 'org.digitallibrary'
version '1.1.1-alpha'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.2'
    implementation 'com.fasterxml.jackson.core:jackson-annotations:2.15.2'
    implementation 'com.fasterxml.jackson.core:jackson-core:2.15.2'
    implementation 'org.springframework:spring-beans:5.3.29'
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    // https://mvnrepository.com/artifact/net.sourceforge.javacsv/javacsv
    implementation group: 'net.sourceforge.javacsv', name: 'javacsv', version: '2.0'
    // https://mvnrepository.com/artifact/org.postgresql/postgresql
    implementation group: 'org.postgresql', name: 'postgresql', version: '42.7.3'

    runtimeOnly 'com.mysql:mysql-connector-j'

    implementation 'org.projectlombok:lombok:1.18.28'
    annotationProcessor 'org.projectlombok:lombok:1.18.28'

    testImplementation 'org.projectlombok:lombok:1.18.28'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.28'

    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.mockito:mockito-core'
    testImplementation 'org.mockito:mockito-junit-jupiter'
    testImplementation 'com.h2database:h2:2.2.224'
}

tasks.named('test') {
    useJUnitPlatform()
}

application {
    mainClassName = 'MainDigitalLibrary'
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

tasks.withType(JavaCompile) {
    options.compilerArgs += ['-Xlint:deprecation']
}

tasks.withType(Test) {
    jvmArgs += ['--add-opens', 'java.base/java.lang=ALL-UNNAMED']
}

tasks.withType(JavaExec) {
    jvmArgs += [
            '--add-opens', 'java.base/java.lang=ALL-UNNAMED',
            '--add-opens', 'java.base/java.net=ALL-UNNAMED'
    ]
}

task runMain(type: JavaExec) {
    mainClass.set('MainDigitalLibrary')
    classpath = sourceSets.main.runtimeClasspath
    args 'arg1', 'arg2'
}
